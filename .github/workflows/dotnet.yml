name: CI/CD for .NET Project

on:
  push:
    branches: [ "master" ]  # CI/CD kích hoạt khi có thay đổi trên nhánh master
  pull_request:
    branches: [ "master" ]  # Kích hoạt khi có pull request vào nhánh master

jobs:
  # Job đầu tiên: Build và Test dự án
  build-and-test:
    runs-on: ubuntu-latest  # Chạy trên Ubuntu

    steps:
    # Bước 1: Lấy mã nguồn từ repository
    - uses: actions/checkout@v4
    
    # Bước 2: Cài đặt .NET SDK (phiên bản 8.0.x)
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Cài đặt phiên bản .NET phù hợp

    # Bước 3: Restore dependencies (khôi phục các gói NuGet)
    - name: Restore dependencies
      run: dotnet restore

    # Bước 4: Build dự án
    - name: Build the project
      run: dotnet build --no-restore --configuration Release

    # Bước 5: Chạy unit test
    - name: Run unit tests
      run: dotnet test --no-build --verbosity normal

  # Job thứ hai: Deploy ứng dụng sau khi build-and-test thành công
  deploy:
    runs-on: ubuntu-latest  # Chạy trên Ubuntu
    needs: build-and-test  # Chỉ chạy job này nếu job build-and-test thành công

    steps:
    - uses: actions/checkout@v4

    # Bước 6: Cài đặt lại .NET SDK để deploy nếu cần
    - name: Setup .NET Core SDK for Deploy
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    # Bước 7: Publish ứng dụng (cụ thể hóa với lệnh publish cho .NET)
    - name: Publish Application
      run: |
        dotnet publish -c Release -o ./publish  # Publish dự án vào thư mục ./publish

    # Bước 8: Triển khai ứng dụng lên server riêng (ví dụ sử dụng SCP)
    - name: Deploy to Server
      run: |
        echo "Deploying application..." 
        scp -r ./publish/* username@your-server:/var/www/your-app  # Lệnh SCP để sao chép file lên server từ xa

    # Bạn có thể thêm lệnh cụ thể cho các dịch vụ như Docker hoặc Azure tại đây, tùy thuộc vào môi trường triển khai.
